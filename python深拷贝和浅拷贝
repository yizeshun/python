#python中copy模块中有copy和deepcopy两方法
  copy会创建一个新对象，对象里面的元素则沿用被拷贝对象的地址
  例1
  a = [1, 2, 3, ['a', 'b', 'c']]
  c = copy.copy(a)
  此时，c的地址是新的，但是遍历c中的元素的地址会发现，c中元素
  的地址和a中元素的地址保持一致。
  此时修改c中的元素要分两种情况：
    1.对于不可更改元素，如int，str，tuple等，修改c中的这些元素
    并不会更改a中的值，因为会重新创建新的元素地址而不是在原地址
    上修改。
    2.对于引用型元素，如list，dict，对象等，修改c中的这些元素
    会改变a中的值，因为a中的元素也指向这个地址。
  因此如果采用copy，修改新对象的引用型元素会同时影响源对象中的引用
  型元素
  deepcopy同样会创建一个新的对象，对象中的元素的地址分两种，一种
  是对于不可更改元素，直接沿用被拷贝对象的地址，另一种对于引用型
  元素，则重新开辟新的地址。故如果采用deepcopy，修改新的对象根本
  不会影响原有的对象。
  
