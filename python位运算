假设  a = 60, b = 13

其二进制格式如下：
  a = 0011 1100
  b = 0000 1101
  
a&b = 0000 1100
a|b = 0011 1101
a^b = 0011 0001
~a  = 1100 0011

&	按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0	(a & b) 输出结果 12 ，二进制解释： 0000 1100
|	按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1	(a | b) 输出结果 61 ，二进制解释： 0011 1101
^	按位异或运算符：当两对应的二进位相异时，结果为1	(a ^ b) 输出结果 49 ，二进制解释： 0011 0001
~	按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1	(~a ) 输出结果 -61 ，二进制解释： 1100 0011
<<左移动运算符：运算数的各二进位全部左移若干位，由”<<”右边的数指定移动的位数，高位丢弃，低位补0	a << 2 输出结果 240 ，二进制解释： 1111 0000
>>右移动运算符：把”>>”左边的运算数的各二进位全部右移若干位，”>>”右边的数指定移动的位数	a >> 2 输出结果 15 ，二进制解释： 0000 1111

说明：
  为什么a按位取反后，输出的结果为-61?
  首先看二进制1100 0011，在有符号的整数中，最高位是符号位，0代表正数，1代表负数
  因此可以得出1100 0011 是个负数，并且其真正代表数值的是100 0011这个部分。
  在计算机中负数采用补码的形式表示，补码就是在原码的基础上求反再加1,。因此需要
  求出这个数的原码，第一步100 0011 -1 得到100 0010 然后求反得到011 1101。因此
  原码为011 1101 ，转为十进制61，加上符号，所以为-61

左移运算符的理解，一个十进制整数左移n位，相当于这个十进制整数乘以2的n次方
右移则相反
  
